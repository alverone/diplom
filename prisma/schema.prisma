generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Book {
  id          String    @id @default(uuid())
  title       String    @unique
  description String
  price       Float
  publishDate DateTime  @map("publish_date")
  pageLength  Int       @map("page_length")
  type        BookType  @default(PAPER)
  categoryId  String    @map("category_id")
  publisherId String    @map("publisher_id")
  authorId    String    @map("author_id")
  author      Author    @relation(fields: [authorId], references: [id], onDelete: Cascade)
  category    Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  publisher   Publisher @relation(fields: [publisherId], references: [id], onDelete: Cascade)

  @@map("books")
}

model Author {
  id          String  @id @default(uuid())
  name        String  @unique
  description String?
  books       Book[]

  @@map("authors")
}

model Category {
  id          String  @id @default(uuid())
  title       String  @unique
  description String?
  books       Book[]

  @@map("categories")
}

model Publisher {
  id          String  @id @default(uuid())
  name        String  @unique
  description String?
  books       Book[]

  @@map("publishers")
}

model User {
  id            String    @id @default(cuid())
  name          String
  surname       String
  email         String    @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  
  updatedAt     DateTime  @updatedAt
  password      String
}

enum BookType {
  ELECTRONIC
  PAPER
}
